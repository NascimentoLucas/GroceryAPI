services:
  postgres:
    image: postgres:15
    container_name: grocery_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4
    container_name: grocery_pgadmin
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  groceryapi:
    build:
      context: ./GroceryAPI
      dockerfile: Dockerfile
    container_name: groceryapi
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5000:8080"
    environment:
      API_KEY_FILE: /run/secrets/secrets.txt
      ASPNETCORE_ENVIRONMENT: Development
    volumes:
      - ./secrets:/run/secrets:ro

volumes:
  postgres_data:
  pgadmin_data:


secrets:
  api_key:
    file: ./secrets
